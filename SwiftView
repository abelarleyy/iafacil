import SwiftUI

struct ContentView: View {
    let items = [
        CardView(title: "O que é uma IA?", description: "Educativo", image: "Card1"),
        CardView(title: "Como usar elas?", description: "Educativo", image: "Card2"),
        CardView(title: "Melhores receitas", description: "Receitas", image: "Card3"),
        CardView(title: "Inspire-se na escrita", description: "Storybook", image: "Card4"),
        CardView(title: "Seu oc ganhando vida", description: "Criação de Artes", image: "Card5"),
        CardView(title: "Lendários dragões", description: "Criação de Artes", image: "Card6")
    ]
    
    let columns = [
        GridItem(.flexible(), spacing: 20),
        GridItem(.flexible(), spacing: 20)
    ]
    
    var body: some View {
        NavigationView {
            VStack {
                HStack(spacing: 10) {
                    Image(systemName: "brain.head.profile")
                        .resizable()
                        .frame(width: 30, height: 30) // Ajustando o tamanho da logo para harmonizar

                    TextField("Pesquisar...", text: .constant(""))
                        .padding(8)
                        .background(Color.white)
                        .cornerRadius(8)
                        .shadow(color: .gray.opacity(0.5), radius: 4, x: 0, y: 4)
                        .overlay(
                            HStack {
                                Spacer()
                                ZStack {
                                    RoundedRectangle(cornerRadius: 8)
                                        .fill(Color.blue)
                                        .frame(width: 30, height: 30)
                                    Image(systemName: "magnifyingglass")
                                        .foregroundColor(.white)
                                }
                                .padding(.trailing, 2)
                            }
                        )
                        .frame(width: 140)
                    
                    Spacer()
                    
                    Button("Entrar / Cadastrar") {}
                        .foregroundColor(.white)
                        .padding(8)
                        .background(Color.blue)
                        .cornerRadius(8)
                        .shadow(color: .gray.opacity(0.5), radius: 4, x: 0, y: 4)
                        .frame(width: 160, height: 30)
                }
                .padding(.vertical, 8)
                .padding(.horizontal)
                .background(Color(hex: 0x009FFF))
                .padding(.bottom, 10)

                HStack {
                    Text("Guias Rápidos")
                        .font(.title2)
                        .bold()
                        .foregroundColor(Color(hex: 0x009FFF))
                        .padding(.leading)
                    
                    Spacer()
                    
                    Button(action: {}) {
                        Text("Filtros")
                            .font(.headline)
                            .foregroundColor(.white)
                            .padding(8)
                            .background(Color(hex: 0x00D8C6))
                            .cornerRadius(8)
                            .shadow(color: .gray.opacity(0.5), radius: 4, x: 0, y: 4)
                    }
                    .padding(.trailing)
                }
                .padding(.top, 10)
                
                ScrollView {
                    LazyVGrid(columns: columns, spacing: 20) {
                        ForEach(0..<items.count, id: \.self) { index in
                            items[index]
                        }
                    }
                    .padding(.horizontal, 20)
                }
                .background(Color(.systemGray6))
                .navigationTitle("")
                .navigationBarHidden(true)
            }
            .background(Color(.white))
        }
    }
}

struct CardView: View {
    
    let title: String
    let description: String
    let image: String
    
    var body: some View {
        VStack(spacing: 0) {
            Image(image)
                .resizable()
                .scaledToFill()
                .frame(height: 150)
                .clipped()
                .cornerRadius(10, corners: [.topLeft, .topRight])
            
            VStack {
                Text(title)
                    .font(.subheadline)
                    .fontWeight(.bold)
                    .multilineTextAlignment(.center)
                    .foregroundColor(.black)
                    .lineLimit(nil)
                
                Text(description)
                    .font(.footnote)
                    .foregroundColor(.black)
                    .multilineTextAlignment(.center)
                
                Spacer()
                
                Button(action: {}) {
                    Text("Acessar")
                        .fontWeight(.bold)
                        .foregroundColor(.white)
                        .frame(maxWidth: .infinity)
                        .padding(10)
                        .background(Color.blue)
                        .cornerRadius(10)
                }
                .padding(.top, 5)
            }
            .padding(10)
            .background(Color(hex: 0xA7D6F1))
            .cornerRadius(10, corners: [.bottomLeft, .bottomRight])
        }
        .frame(width: 160, height: 250)
        .background(Color(hex: 0x009FFF))
        .cornerRadius(15)
        .shadow(radius: 5)
    }
}

extension View {
    func cornerRadius(_ radius: CGFloat, corners: UIRectCorner) -> some View {
        clipShape(RoundedCorner(radius: radius, corners: corners))
    }
}

struct RoundedCorner: Shape {
    var radius: CGFloat = .infinity
    var corners: UIRectCorner = .allCorners

    func path(in rect: CGRect) -> Path {
        let path = UIBezierPath(roundedRect: rect, byRoundingCorners: corners, cornerRadii: CGSize(width: radius, height: radius))
        return Path(path.cgPath)
    }
}

extension Color {
    init(hex: UInt) {
        self.init(
            .sRGB,
            red: Double((hex >> 16) & 0xFF) / 255,
            green: Double((hex >> 8) & 0xFF) / 255,
            blue: Double(hex & 0xFF) / 255,
            opacity: 1
        )
    }
}

#Preview {
    ContentView()
}
